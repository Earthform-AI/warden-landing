/* empty css                                 */
import { e as createComponent, m as maybeRenderHead, h as addAttribute, r as renderTemplate, f as createAstro, l as renderComponent, n as renderScript, k as renderHead } from '../chunks/astro/server_DsjncM3D.mjs';
import 'kleur/colors';
import 'clsx';
import { h as hero, c as mission, m as meta, e as ecosystem, d as community, g as cta, f as footer } from '../chunks/site.config_DDz159c7.mjs';
export { renderers } from '../renderers.mjs';

const $$HeroSection = createComponent(($$result, $$props, $$slots) => {
  return renderTemplate`${maybeRenderHead()}<section class="bg-black text-white py-32 text-center animate-fade-in"> <div class="max-w-4xl mx-auto px-4"> <h1 class="text-5xl font-bold mb-6 animate-slide-up"> ${hero.title} </h1> <p class="text-xl mb-6 opacity-80 animate-slide-up"> ${hero.subtitle} </p> <p class="text-lg mb-8 opacity-70 animate-slide-up italic">
"${hero.quote}"
</p> <a${addAttribute(hero.cta.link, "href")} class="inline-block bg-white text-black px-8 py-3 rounded font-semibold hover:bg-gray-100 hover:scale-105 transition-all duration-200 shadow-lg animate-glow"> ${hero.cta.text} </a> </div> </section>`;
}, "/home/josh/projects/warden-landing/src/components/HeroSection.astro", void 0);

const $$MissionSection = createComponent(($$result, $$props, $$slots) => {
  return renderTemplate`${maybeRenderHead()}<section class="bg-gray-900 text-white py-20 relative overflow-hidden"> <!-- Subtle background pattern for depth --> <div class="absolute inset-0 opacity-5"> <div class="absolute inset-0" style="background-image: radial-gradient(circle at 2px 2px, rgba(255,255,255,0.1) 1px, transparent 0); background-size: 32px 32px;"></div> </div> <div class="max-w-5xl mx-auto px-4 relative"> <!-- The Problem Section with enhanced storytelling --> <div class="grid md:grid-cols-2 gap-12 items-center mb-20"> <div class="space-y-6"> <div class="inline-flex items-center gap-2 px-3 py-1 bg-red-900/30 rounded-full text-red-300 text-sm font-medium mb-2"> ${mission.problem.tagline} </div> <h2 class="text-4xl font-bold mb-6 leading-tight"> ${mission.problem.heading} </h2> <!-- Statistics block for impact --> <div class="grid grid-cols-2 gap-4 py-6 px-4 bg-gray-800/50 rounded-lg backdrop-blur-sm border border-gray-700/50"> ${mission.problem.stats.map((stat) => renderTemplate`<div class="text-center"> <div${addAttribute(`text-2xl font-bold text-${stat.color}-400`, "class")}>${stat.number}</div> <div class="text-xs opacity-70">${stat.label}</div> </div>`)} </div> <div class="space-y-4"> ${mission.problem.description.map((paragraph) => renderTemplate`<p class="text-lg opacity-90 leading-relaxed"> ${paragraph} </p>`)} <!-- Emotional bridge to solution --> <div class="pt-4 border-t border-gray-700/50"> <p class="text-xl font-medium text-blue-300 italic leading-relaxed">
"${mission.problem.quote}"
</p> <p class="text-base opacity-80 mt-3"> ${mission.problem.solution} </p> </div> </div> </div> <div class="relative group"> <div class="absolute -inset-4 bg-gradient-to-r from-blue-500/20 via-purple-500/20 to-green-500/20 rounded-lg blur opacity-75 group-hover:opacity-100 transition duration-1000"></div> <img${addAttribute(meta.images.hero.src, "src")}${addAttribute(meta.images.hero.alt, "alt")} class="relative rounded-lg shadow-2xl border border-gray-700/50 group-hover:scale-105 transition-transform duration-500"> <!-- Floating info cards for immersion --> <div class="absolute -top-4 -right-4 bg-green-500/90 backdrop-blur-sm text-white px-3 py-2 rounded-lg text-sm font-medium shadow-lg border border-green-400/50">
‚úì Threat Detected
</div> <div class="absolute -bottom-4 -left-4 bg-blue-500/90 backdrop-blur-sm text-white px-3 py-2 rounded-lg text-sm font-medium shadow-lg border border-blue-400/50">
üõ°Ô∏è Miners Protected
</div> </div> </div> <!-- What We Stand For Section with enhanced immersion --> <div class="border-t border-gray-700 pt-20"> <!-- Section intro with animated elements --> <div class="text-center mb-16"> <div class="inline-flex items-center gap-2 px-4 py-2 bg-green-900/30 rounded-full text-green-300 text-sm font-medium mb-6"> ${mission.philosophy.tagline} </div> <h2 class="text-4xl font-bold mb-8 bg-gradient-to-r from-white via-blue-200 to-green-200 bg-clip-text text-transparent"> ${mission.philosophy.heading} </h2> <!-- Core tagline with emphasis --> <div class="relative mb-8"> <p class="text-2xl font-light max-w-2xl mx-auto leading-relaxed"> <span class="text-blue-300 italic font-serif">"${mission.philosophy.subtitle}"</span> </p> <div class="absolute -bottom-2 left-1/2 transform -translate-x-1/2 w-24 h-0.5 bg-gradient-to-r from-transparent via-green-400 to-transparent"></div> </div> <p class="text-lg opacity-80 max-w-3xl mx-auto leading-relaxed"> ${mission.philosophy.description} </p> <!-- Journey narrative --> <div class="mt-12 max-w-4xl mx-auto"> <div class="relative"> <div class="absolute left-1/2 transform -translate-x-1/2 w-px h-full bg-gradient-to-b from-transparent via-gray-600 to-transparent"></div> <div class="grid md:grid-cols-3 gap-8 relative"> <!-- Past --> <div class="text-center group"> <div class="w-12 h-12 mx-auto mb-4 bg-red-500/20 rounded-full flex items-center justify-center border-2 border-red-500/50 group-hover:border-red-400 transition-colors"> <span class="text-red-400 text-sm">‚ö†Ô∏è</span> </div> <h4 class="text-sm font-semibold text-red-300 mb-2">The Past</h4> <p class="text-xs opacity-60">Reactive safety. Dangerous guesswork. Lives lost to preventable accidents.</p> </div> <!-- Present --> <div class="text-center group"> <div class="w-12 h-12 mx-auto mb-4 bg-blue-500/20 rounded-full flex items-center justify-center border-2 border-blue-500/50 group-hover:border-blue-400 transition-colors"> <span class="text-blue-400 text-sm">üõ°Ô∏è</span> </div> <h4 class="text-sm font-semibold text-blue-300 mb-2">Today</h4> <p class="text-xs opacity-60">Intelligent prediction. AI-powered protection. Every miner becomes visible.</p> </div> <!-- Future --> <div class="text-center group"> <div class="w-12 h-12 mx-auto mb-4 bg-green-500/20 rounded-full flex items-center justify-center border-2 border-green-500/50 group-hover:border-green-400 transition-colors"> <span class="text-green-400 text-sm">üå±</span> </div> <h4 class="text-sm font-semibold text-green-300 mb-2">Tomorrow</h4> <p class="text-xs opacity-60">Harmonious extraction. Earth-conscious mining. Legacy worth leaving.</p> </div> </div> </div> </div> </div> <!-- Enhanced value proposition cards --> <div class="grid md:grid-cols-3 gap-8"> ${mission.values.map((value) => renderTemplate`<div class="group relative"> <div${addAttribute(`absolute -inset-1 bg-gradient-to-r from-${value.color}-600/50 to-${value.color === "blue" ? "purple" : value.color === "green" ? "emerald" : "orange"}-600/50 rounded-lg blur opacity-25 group-hover:opacity-75 transition duration-1000`, "class")}></div> <div${addAttribute(`relative p-8 bg-gray-800 rounded-lg border border-gray-700/50 hover:border-${value.color}-500/50 transition-all duration-300 hover:transform hover:scale-105`, "class")}> <div class="text-center"> <!-- Icon with glow effect --> <div${addAttribute(`w-16 h-16 mx-auto mb-6 bg-${value.color}-500/20 rounded-full flex items-center justify-center border-2 border-${value.color}-500/50 group-hover:border-${value.color}-400 group-hover:bg-${value.color}-500/30 transition-all`, "class")}> <span class="text-3xl">${value.icon}</span> </div> <h3${addAttribute(`text-xl font-bold mb-4 text-${value.color}-300 group-hover:text-${value.color}-200 transition-colors`, "class")}> ${value.title} </h3> <p class="text-sm opacity-80 mb-6 leading-relaxed"> ${value.description} </p> <!-- Feature highlights --> <div class="space-y-2 text-xs opacity-60"> ${value.features.map((feature) => renderTemplate`<div class="flex items-center justify-center gap-2"> <span${addAttribute(`w-2 h-2 bg-${value.color}-400 rounded-full`, "class")}></span> ${feature} </div>`)} </div> </div> </div> </div>`)} </div> <!-- Closing inspiration --> <div class="text-center mt-16 pt-12 border-t border-gray-700/30"> <p class="text-lg italic opacity-70 max-w-2xl mx-auto">
"${mission.philosophy.quote}"
</p> <p class="text-sm opacity-50 mt-4">${mission.philosophy.attribution}</p> </div> </div> </div> </section>`;
}, "/home/josh/projects/warden-landing/src/components/MissionSection.astro", void 0);

const $$EcosystemSection = createComponent(($$result, $$props, $$slots) => {
  return renderTemplate`${maybeRenderHead()}<section class="bg-black text-white py-20"> <div class="max-w-6xl mx-auto px-4"> <div class="text-center mb-16"> <h2 class="text-3xl font-bold mb-6">${ecosystem.heading}</h2> <p class="text-xl opacity-80 max-w-3xl mx-auto"> ${ecosystem.subtitle} </p> </div> <div class="grid md:grid-cols-3 gap-8"> ${ecosystem.drones.map((drone) => renderTemplate`<div${addAttribute(`bg-gray-900 p-8 rounded-lg text-center hover:bg-gray-800 transition-all duration-300 hover:scale-105 hover:shadow-xl`, "class")}> <div class="text-4xl mb-4">${drone.icon}</div> <h3${addAttribute(`text-xl font-bold mb-3 text-${drone.color}-400`, "class")}>${drone.name}</h3> <p class="text-sm opacity-80 mb-4">${drone.tagline}</p> <div class="text-xs opacity-60"> ${drone.features.map((feature) => renderTemplate`<div>‚Ä¢ ${feature}</div>`)} </div> </div>`)} </div> <div class="text-center mt-12"> <p class="text-sm opacity-60 italic mb-4"> ${ecosystem.footer.description} </p> <p class="text-xs opacity-50"> ${ecosystem.footer.tagline} </p> </div> </div> </section>`;
}, "/home/josh/projects/warden-landing/src/components/EcosystemSection.astro", void 0);

const $$CommunitySection = createComponent(($$result, $$props, $$slots) => {
  return renderTemplate`${maybeRenderHead()}<section id="community" class="bg-gradient-to-br from-gray-900 via-black to-gray-900 text-white py-20 relative overflow-hidden"> <!-- Background decoration --> <div class="absolute inset-0 opacity-10"> <div class="absolute inset-0" style="background-image: radial-gradient(circle at 3px 3px, rgba(255,255,255,0.15) 1px, transparent 0); background-size: 48px 48px;"></div> </div> <div class="max-w-6xl mx-auto px-4 relative"> <div class="text-center mb-16"> <div class="inline-flex items-center gap-2 px-4 py-2 bg-blue-900/30 rounded-full text-blue-300 text-sm font-medium mb-6">
üåç Community
</div> <h2 class="text-4xl font-bold mb-6 bg-gradient-to-r from-white via-blue-200 to-green-200 bg-clip-text text-transparent"> ${community.heading} </h2> <p class="text-xl opacity-90 max-w-3xl mx-auto leading-relaxed mb-8"> ${community.subtitle} </p> <p class="text-lg opacity-80 max-w-2xl mx-auto leading-relaxed"> ${community.description} </p> </div> <!-- Discord CTA with emphasis --> <div class="text-center mb-16"> <div class="relative inline-block group"> <div class="absolute -inset-4 bg-gradient-to-r from-blue-500/20 via-purple-500/20 to-green-500/20 rounded-lg blur opacity-75 group-hover:opacity-100 transition duration-1000"></div> <a${addAttribute(community.discord.link, "href")} target="_blank" rel="noopener" class="relative inline-flex items-center gap-3 bg-gradient-to-r from-blue-600 to-green-500 hover:from-blue-700 hover:to-green-600 text-white font-bold py-4 px-12 rounded-xl transition-all duration-200 shadow-2xl hover:scale-105 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 focus:ring-offset-black"> <span class="text-2xl">üí¨</span> <div class="text-left"> <div class="text-lg">${community.discord.text}</div> <div class="text-sm opacity-90">${community.discord.subtitle}</div> </div> </a> </div> </div> <!-- Community values --> <div class="grid md:grid-cols-3 gap-8"> ${community.values.map((value) => renderTemplate`<div class="group relative"> <div class="absolute -inset-2 bg-gradient-to-r from-blue-500/10 to-green-500/10 rounded-lg blur opacity-25 group-hover:opacity-75 transition duration-300"></div> <div class="relative bg-gray-800/50 backdrop-blur-sm border border-gray-700/50 p-6 rounded-lg text-center hover:bg-gray-800/70 transition-all duration-300 hover:scale-105"> <div class="text-3xl mb-4">${value.icon}</div> <h3 class="text-xl font-bold mb-3 text-blue-300">${value.title}</h3> <p class="text-sm opacity-80 leading-relaxed">${value.description}</p> </div> </div>`)} </div> <!-- Call to action reinforcement --> <div class="text-center mt-16 pt-12 border-t border-gray-700/30"> <p class="text-lg italic opacity-70 max-w-2xl mx-auto">
"A future where it is okay to be human, a treasure worth shielding."
</p> <p class="text-sm opacity-50 mt-4">‚Äî The Earthform Community</p> </div> </div> </section>`;
}, "/home/josh/projects/warden-landing/src/components/CommunitySection.astro", void 0);

const $$CTASection = createComponent(($$result, $$props, $$slots) => {
  return renderTemplate`${maybeRenderHead()}<section id="join" class="bg-white text-black py-24 text-center"> <div class="max-w-3xl mx-auto px-4"> <h2 class="text-4xl font-bold mb-6">${cta.heading}</h2> <p class="text-lg mb-8 opacity-80"> ${cta.subtitle} </p> <form${addAttribute(cta.form.action, "action")} method="POST" class="flex flex-col gap-4 max-w-md mx-auto"> <input type="hidden" name="_redirect" value="/thanks"> <input type="email" name="email"${addAttribute(cta.form.emailPlaceholder, "placeholder")} required class="p-3 border border-gray-300 rounded focus:ring-2 focus:ring-gray-500 focus:border-transparent transition-all"> <textarea name="message"${addAttribute(cta.form.messagePlaceholder, "placeholder")} rows="4" class="p-3 border border-gray-300 rounded focus:ring-2 focus:ring-gray-500 focus:border-transparent transition-all"></textarea> <button type="submit" class="bg-black text-white px-6 py-3 rounded hover:bg-gray-800 hover:scale-105 transition-all duration-200 focus:outline-none focus:ring-2 focus:ring-gray-500 focus:ring-offset-2 shadow-lg"> ${cta.form.submitText} </button> </form> </div> </section>`;
}, "/home/josh/projects/warden-landing/src/components/CTASection.astro", void 0);

const $$Astro = createAstro();
const $$Index$1 = createComponent(($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro, $$props, $$slots);
  Astro2.self = $$Index$1;
  const propsStr = JSON.stringify(Astro2.props);
  const paramsStr = JSON.stringify(Astro2.params);
  return renderTemplate`${renderComponent($$result, "vercel-analytics", "vercel-analytics", { "data-props": propsStr, "data-params": paramsStr, "data-pathname": Astro2.url.pathname })} ${renderScript($$result, "/home/josh/projects/warden-landing/node_modules/@vercel/analytics/dist/astro/index.astro?astro&type=script&index=0&lang.ts")}`;
}, "/home/josh/projects/warden-landing/node_modules/@vercel/analytics/dist/astro/index.astro", void 0);

const $$Index = createComponent(($$result, $$props, $$slots) => {
  return renderTemplate`<html lang="en"> <head><meta charset="utf-8"><title>${meta.title}</title><meta name="description"${addAttribute(meta.description, "content")}><meta name="viewport" content="width=device-width, initial-scale=1.0"><link rel="icon" type="image/svg+xml" href="/favicon.svg"><link rel="stylesheet" href="/src/styles/global.css"><!-- Open Graph / Facebook --><meta property="og:type" content="website"><meta property="og:title"${addAttribute(meta.openGraph.title, "content")}><meta property="og:description"${addAttribute(meta.openGraph.description, "content")}><!-- Twitter --><meta property="twitter:card" content="summary_large_image"><meta property="twitter:title"${addAttribute(meta.twitter.title, "content")}><meta property="twitter:description"${addAttribute(meta.twitter.description, "content")}><!-- Additional SEO --><meta name="keywords"${addAttribute(meta.keywords, "content")}><meta name="author"${addAttribute(meta.author, "content")}><link rel="canonical"${addAttribute(meta.url, "href")}>${renderHead()}</head> <body class="font-sans bg-black text-white"> ${renderComponent($$result, "HeroSection", $$HeroSection, {})} ${renderComponent($$result, "MissionSection", $$MissionSection, {})} ${renderComponent($$result, "EcosystemSection", $$EcosystemSection, {})} ${renderComponent($$result, "CommunitySection", $$CommunitySection, {})} ${renderComponent($$result, "CTASection", $$CTASection, {})} ${renderComponent($$result, "Analytics", $$Index$1, {})} <footer class="bg-gray-950 text-gray-400 py-8 text-center text-sm mt-12"> <div>${footer.text}</div> <nav class="mt-2 flex justify-center gap-4"> ${footer.links.map((link) => renderTemplate`<a${addAttribute(link.href, "href")} class="hover:text-white underline transition-all duration-150">${link.label}</a>`)} </nav> </footer> </body></html>`;
}, "/home/josh/projects/warden-landing/src/pages/index.astro", void 0);

const $$file = "/home/josh/projects/warden-landing/src/pages/index.astro";
const $$url = "";

const _page = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
  __proto__: null,
  default: $$Index,
  file: $$file,
  url: $$url
}, Symbol.toStringTag, { value: 'Module' }));

const page = () => _page;

export { page };
